
== Install CanCan Authorization
ref. https://github.com/ryanb/cancan


1. Rails3 Gemfile 에  authorization gem 추가

 $ vi  Gemfile
 
   gem 'cancan'
   
2.  bundle 명령실행
  
  $ bundle install
  
3.  Ability 정의: 
   # User permissions are defined in an Ability class.
   
  $ rails g cancan:ability
  
       =>  create  app/models/ability.rb
  
 4. Check Abilities & Authorization

    # The current user’s permissions can then be checked using the can? and cannot? methods in the view and controller.
    
   <% if can? :update, @article %>
    <%= link_to "Edit", edit_article_path(@article) %>
  <% end %>
   
    See Checking Abilities for more information : https://github.com/ryanb/cancan/wiki/checking-abilities
    
    The "authorize!" method in the controller will raise an exception if the user is not able to perform the given action.

  def show
    @article = Article.find(params[:id])
    authorize! :read, @article
  end

   the "load_and_authorize_resource"  method is provided to automatically authorize all actions in a RESTful style resource controller.
    It will use a before filter to load the resource into an instance variable and authorize it for every action.

  class ArticlesController < ApplicationController
    load_and_authorize_resource

    def show
      # @article is already loaded and authorized
    end
  end

See Authorizing Controller Actions for more information: https://github.com/ryanb/cancan/wiki/authorizing-controller-actions

5. Handle Unauthorized Access

If the user authorization fails, a CanCan::AccessDenied exception will be raised. 
You can catch this and modify its behavior in the ApplicationController.

  class ApplicationController < ActionController::Base
    rescue_from CanCan::AccessDenied do |exception|
      redirect_to root_url, :alert => exception.message
    end
  end

See Exception Handling for more information. 
